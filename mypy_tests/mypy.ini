[mypy]
#
files = .


# Follow imports for type information but do not raise an error unless
# the file is explicitly type checked
# Valid values:skip/silent/normal/error.
follow_imports = silent

# Untyped imports are not imported as Any
disallow_any_unimported = True

# Allow imports to be untyped
# Phase 2: Once we have typed enough we will set to False and start requiring our 3rd party types to have types
ignore_missing_imports = True

# Untyped decorators will make a function untyped. This enforces decorators to be typed correctly.
disallow_untyped_decorators = True

#disallow_untyped_calls = False
disallow_untyped_defs = False

# Ensure even untyped functions are type checked
check_untyped_defs = True

strict_optional = True
strict_equality = True

# This disallows automatic reexporting after importing a module.
implicit_reexport = False

# We have to specify `Optional`
no_implicit_optional = True

# We want to see the error code
show_error_codes = True

# Warnings
warn_unused_ignores = True
warn_redundant_casts = True
warn_unused_configs = True
warn_unreachable = True
warn_no_return = True
warn_return_any = True

plugins = mypy_django_plugin.main


# Path to custom type stubs
mypy_path = type_stubs


# We need to disable this to allow arbitrary Queryset to parse
disallow_any_generics = False

[mypy.plugins.django-stubs]
django_settings_module = "mypy_tests.settings"

##### Custom rules for tests
[mypy-*.tests.*,*.tests]
allow_untyped_defs = True
disallow_any_unimported = False


##### Custom rules for migrations. Ignore errors in migration files. A bit heavy handed, we can tweak this later.
[mypy-*.migrations.*]
ignore_errors = True


